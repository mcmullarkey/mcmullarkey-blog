```` markdown
---
title: "Create All Borough Reports"
author: "Michael Mullarkey"
---

# Load Packages

```{{r}}

library(whisker)    # For replacing {{ }} text
library(tidyverse)  # For function creation + data wrangling
library(glue)       # For programmatic file naming
library(lubridate)  # For today()
library(here)       # For better file paths
library(quarto)     # For rendering

```

# Use Whisker to Modify Template .qmd File with Desired Values

```{{r}}

use_borough_template <- function(borough, file_name) {
  
  raw_qmd <- readLines(file_name) # Reading in full .qmd file
  
  filled_qmd <- whisker.render(raw_qmd) # Replace {{}} with func value 
  
  writeLines(
    text = filled_qmd,
    con = glue("{borough}_{today()}.qmd") # Programmatic naming so we don't
    # just overwrite the same file again and again when we iterate
  )
    
}

```

# Render .qmd Files Using Programmatic Names

```{{r}}

render_borough_template <- function(borough, file_name) {
  
  quarto_render(
    input = glue("{borough}_{today()}.qmd")
  )
  
}

```

# Put Both Functions Together So We Only Have to Make One Function Call

```{{r}}

create_borough_report <- function(borough, file_name) {
  
  use_borough_template(borough = borough, file_name = file_name)
  
  render_borough_template(borough = borough, file_name = file_name)
  
}

```

# Testing the report creation once before going on to programmatic

```{{r}}

# Testing the report creation once before going on to programmatic

# create_borough_report(borough = "Manhattan", file_name = "borough_template.qmd")

```

# Creating a dataframe of information to map over

```{{r}}

# Create data frame to map over for borough reports

all_boroughs <- elevators::elevators %>% 
  distinct(borough) %>% 
  deframe()

file_name_vec <- rep("borough_template.qmd", length(all_boroughs))

boroughs_report_df <- tibble(all_boroughs, file_name_vec)

```

# Map over all borough reports

```{{r}}

# This also could be walk because we're really just looking for side effects!

# Not necessary to do pmap for this example but it's more extensible to if you
# need to use more than 2 paramters (otherwise can use map or map2)

pmap(
  boroughs_report_df,
  ~create_borough_report(
    borough = ..1,
    file_name = ..2
  )
)

```
````